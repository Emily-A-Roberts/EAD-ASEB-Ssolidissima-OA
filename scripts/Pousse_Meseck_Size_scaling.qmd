---
title: "Biodeposition_size_scaling"
format: html
editor: visual
---

## Quarto

```{r}
library(ggplot2)
library(ggpubr)
library(nlme)
library(data.table)
setwd("~/GitHub/EAD-ASEB-Ssolidissima-OA/data")

bd_Pousse <- read.csv("Pousse_Meseck_Raw Data Surfclam Biodeposition.csv", stringsAsFactors = FALSE, header = TRUE)

bd_Pousse$Dry.weight..mg. <- bd_Pousse$DW_corr

str(bd_Pousse)

bd_Pousse$Treatment <- as.factor(bd_Pousse$pH)
bd_Pousse$OER[bd_Pousse$OER<=-.5]<-NA
bd_Pousse$IER[bd_Pousse$IER<=-.5]<-NA
bd_Pousse$Dry.weight..mg.[bd_Pousse$Dry.weight..mg.>=.5]<-NA

ambient <- bd_Pousse[bd_Pousse$Treatment==8,]


gg1 <- ggplot(data = bd_Pousse, aes(x=Length..mm., y=Dry.weight..mg., color = Treatment))+ geom_point()
  gg1

  
bd_Pousse$Treatment <- as.factor(bd_Pousse$pH)
bd_Pousse$Date <- as.Date(bd_Pousse$Date, format = "%m/%d/%Y")
bd_Pousse$Date[bd_Pousse$Date=="2019-06-12"] <-"2019-06-11"
bd_Pousse$Month <- as.factor(bd_Pousse$Date)
  
nls <- nls(Dry.weight..mg. ~ A * Length..mm.^B, 
                 start = list(A = 3, B = 3),
                 data = bd_Pousse, 
                 na.action=na.exclude)
summary(nls)
2.652*.76

#Note the summary data does not have length included, so am getting the relationship between length and dry weight separately.

#This file has PIMs, but I don't think I'm correctly calculating CR from IFR using these PIMs. There must be something I'm missing. The PIMs seem very high (by an order of 10), and the scaling factor seems higher than expected (3+).

#Based on my calculations of IFR and CR and accounting for month (different coefficients for the different months), I got a value of 2.5 +- .5 for the scaling factor.

```

You can add options to executable code like this

```{r}

gg1 <- ggplot(data = bd_Pousse, aes(x=Dry.weight..mg., y=OER, color = Treatment))+
  geom_point()+
  xlab("Dry weight") + 
  ylab("OER")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('OER as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 0.72)),
    se = FALSE
  )#stat_smooth(color = 1, method = 'nls', formula = 'y~a*exp(b*x)',
    #            method.args = list(start=c(A = 2.3, B=.72)), se=FALSE) +
  facet_wrap(~ Treatment)

gg1


nls_8 <- nls(OER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="8",], 
                 na.action=na.exclude)
nls_7.5 <- nls(OER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7.5",], 
                 na.action=na.exclude)
nls_7 <- nls(OER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7",], 
                 na.action=na.exclude)
summary(nls_8)
summary(nls_7.5)
summary(nls_7)

nls_all <- nls(OER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse,
                 na.action=na.exclude)
summary(nls_all)


```

```{r}
gg1 <- ggplot(data = bd_Pousse, aes(x=Dry.weight..mg., y=IER, color = Treatment))+
  geom_point()+
  xlab("Dry weight") + 
  ylab("IER")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('IER as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 0.72)),
    se = FALSE
  )#stat_smooth(color = 1, method = 'nls', formula = 'y~a*exp(b*x)',
    #            method.args = list(start=c(A = 2.3, B=.72)), se=FALSE) +
  facet_wrap(~ Treatment)

gg1


nls_8 <- nls(IER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="8",], 
                 na.action=na.exclude)
nls_7.5 <- nls(IER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7.5",], 
                 na.action=na.exclude)
nls_7 <- nls(IER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7",], 
                 na.action=na.exclude)
summary(nls_8)
summary(nls_7.5)
summary(nls_7)

nls_all <- nls(IER ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse,
                 na.action=na.exclude)
summary(nls_all)

```

```{r}
gg1 <- ggplot(data = bd_Pousse, aes(x=Dry.weight..mg., y=ORR, color = Treatment))+
  geom_point()+
  xlab("Dry weight") + 
  ylab("ORR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('ORR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 0.72)),
    se = FALSE
  )#stat_smooth(color = 1, method = 'nls', formula = 'y~a*exp(b*x)',
    #            method.args = list(start=c(A = 2.3, B=.72)), se=FALSE) +
  facet_wrap(~ Treatment)

gg1


nls_8 <- nls(ORR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="8",], 
                 na.action=na.exclude)
nls_7.5 <- nls(ORR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7.5",], 
                 na.action=na.exclude)
nls_7 <- nls(ORR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7",], 
                 na.action=na.exclude)
summary(nls_8)
summary(nls_7.5)
summary(nls_7)

nls_all <- nls(ORR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse,
                 na.action=na.exclude)
summary(nls_all)
```

```{r}
gg1 <- ggplot(data = bd_Pousse, aes(x=Dry.weight..mg., y=IRR, color = Treatment))+
  geom_point()+
  xlab("Dry weight") + 
  ylab("IRR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('IRR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 0.72)),
    se = FALSE
  )#stat_smooth(color = 1, method = 'nls', formula = 'y~a*exp(b*x)',
    #            method.args = list(start=c(A = 2.3, B=.72)), se=FALSE) +
  facet_wrap(~ Treatment)

gg1


nls_8 <- nls(IRR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="8",], 
                 na.action=na.exclude)
nls_7.5 <- nls(IRR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7.5",], 
                 na.action=na.exclude)
nls_7 <- nls(IRR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse[bd_Pousse$Treatment=="7",], 
                 na.action=na.exclude)
summary(nls_8)
summary(nls_7.5)
summary(nls_7)

nls_all <- nls(IRR ~ A * Dry.weight..mg.^B, 
                 start = list(A = 2.3, B = 0.72),
                 data = bd_Pousse,
                 na.action=na.exclude)
summary(nls_all)
```

```{r}
fit1 <- nlme::gnls(OER~ A*Dry.weight..mg.^B,
           params = list(A~Treatment-1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = .7 ))
summary(fit1)

fit2 <- nlme::gnls(OER~ A*Dry.weight..mg.^B,
           params = list(A~Treatment-1, B~Treatment-1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = c(1,1,1) ))
summary(fit2)

fit3 <- nlme::gnls(OER~ A*Dry.weight..mg.^B,
           params = list(A~1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=1, B = .7 ))
summary(fit3)
AIC(fit1,fit2,fit3)
BIC(fit1,fit2,fit3)
```

```{r}

fit_OER_treat <- nlme(OER~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = A ~ 1|Treatment,
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))

fit_OER_month <- nlme(OER~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = A ~ 1|Month,
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))

fit_OER_crossed <- nlme(OER~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = list(Treatment=(A+B~1),Month=(A~1)),
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))

summary(fit_OER_treat)
summary(fit_OER_month)
summary(fit_OER_crossed)
```

```{r}
fit_OER_crossed <- nlme(OER~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = list(Treatment=(A+B~1),Month=(A~1)),
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))
fit_IER_crossed <- nlme(IER~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = list(Treatment=(A+B~1),Month=(A~1)),
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))
fit_ORR_crossed <- nlme(ORR~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = list(Treatment=(A~1)), #Removed random effect of month bc would not converge
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))
fit_IRR_crossed <- nlme(IRR~ A*Dry.weight..mg.^B,
           fixed = A + B ~ 1,
           random = list(Treatment=(A+B~1),Month=(A~1)),
           data=bd_Pousse,
           na.action = na.exclude,
           start = c(A=1, B = .7 ))

summary(fit_OER_crossed)
summary(fit_IER_crossed)
summary(fit_ORR_crossed)
summary(fit_IRR_crossed)
```

```{r}
fit1 <- nlme::gnls(OER~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = .3 ))
summary(fit1)

fit2 <- nlme::gnls(OER~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~Treatment-1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = c(.3,.3,.3) ))
summary(fit2)

fit3 <- nlme::gnls(OER~ A*(Length..mm./10)^B,
           params = list(A~1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=1, B = .3 ))
summary(fit3)
AIC(fit1,fit2,fit3)
BIC(fit1,fit2,fit3)

gg1 <- ggplot(data = bd_Pousse, aes(x=Length..mm./10, y=OER, color = Treatment))+
  geom_point()+
  #xlab("Dry weight") + 
  #ylab("ORR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('ORR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 2)),
    se = FALSE
  ) 
#+
  #facet_wrap(~ Treatment)

gg1

```

```{r}
fit1 <- nlme::gnls(IER~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = .3 ))
summary(fit1)

fit2 <- nlme::gnls(IER~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~Treatment-1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = c(.3,.3,.3) ))
summary(fit2)

fit3 <- nlme::gnls(IER~ A*(Length..mm./10)^B,
           params = list(A~1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=1, B = .3 ))
summary(fit3)
AIC(fit1,fit2,fit3)
BIC(fit1,fit2,fit3)

gg1 <- ggplot(data = bd_Pousse, aes(x=Length..mm./10, y=IER, color = Treatment))+
  geom_point()+
  #xlab("Dry weight") + 
  #ylab("ORR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('ORR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 2)),
    se = FALSE
  ) 
#+
  #facet_wrap(~ Treatment)

gg1




```

```{r}
fit1 <- nlme::gnls(ORR~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = .3 ))
summary(fit1)

fit2 <- nlme::gnls(ORR~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~Treatment-1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = c(.3,.3,.3) ))
summary(fit2)

fit3 <- nlme::gnls(ORR~ A*(Length..mm./10)^B,
           params = list(A~1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=1, B = .3 ))
summary(fit3)
AIC(fit1,fit2,fit3)
BIC(fit1,fit2,fit3)

gg1 <- ggplot(data = bd_Pousse, aes(x=Length..mm./10, y=ORR, color = Treatment))+
  geom_point()+
  #xlab("Dry weight") + 
  #ylab("ORR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('ORR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 2)),
    se = FALSE
  ) 
#+
  #facet_wrap(~ Treatment)

gg1

```

```{r}
fit1 <- nlme::gnls(IRR~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = .3 ))
summary(fit1)

fit2 <- nlme::gnls(IRR~ A*(Length..mm./10)^B,
           params = list(A~Treatment-1, B~Treatment-1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=c(1,1,1), B = c(.3,.3,.3) ))
summary(fit2)

fit3 <- nlme::gnls(IRR~ A*(Length..mm./10)^B,
           params = list(A~1, B~1), 
           data=bd_Pousse,
           na.action = na.exclude,
           start = list(A=1, B = .3 ))
summary(fit3)
AIC(fit1,fit2,fit3)
BIC(fit1,fit2,fit3)

gg1 <- ggplot(data = bd_Pousse, aes(x=Length..mm./10, y=IRR, color = Treatment))+
  geom_point()+
  #xlab("Dry weight") + 
  #ylab("ORR")+
  #ylim(0,9)+
  #scale_color_discrete(name="Site")+
  #ggtitle ('ORR as a function of DW')+
  stat_smooth(
    method = 'nls',
    formula = y ~ A * x^B,
    method.args = list(start = c(A = 2.3, B = 2)),
    se = FALSE
  ) 
#+
  #facet_wrap(~ Treatment)

gg1
```
