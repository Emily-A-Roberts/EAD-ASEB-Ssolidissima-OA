---
title: "TSM and Chl"
editor: visual
format: pdf
---

Libraries

```{r}
#| echo: false
library(reshape2)
library(dplyr)
library(ggplot2)
library(tibble)
library("ggsci")
library(knitr)
```

Plot settings

```{r}
#| echo: false
par(mar = c(1, 3.5, 1, 1))
new.pal <- c(pal_jco()(10)[4],pal_jco()(10)[6],pal_jco()(10)[5],pal_jco()(10)[2],'grey57','grey80')
#barplot(1:10, col = pal_jco()(10))
new.pal <- c("blue","black","orange","red","green")

```

Read in data

```{r}
dir1 <- "~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/TSM and Chl/"
filter_TSM<- read.csv(paste(dir1,"TSM and Chl data - TSM filters.csv",sep = ""), header = TRUE, stringsAsFactors = FALSE)

filter_TSM <- filter_TSM[!is.na(filter_TSM$Site),]
filter_TSM <- filter_TSM[!is.na(filter_TSM$Date),]

# Separate out header row with unit information from dataframe
unit <- filter_TSM[1,]
filter_TSM <- filter_TSM[2:nrow(filter_TSM),]
str(filter_TSM)
```

Update site labels to be consistent. Format dates.

```{r}
#Save site label info
filter_TSM$Site.info <- filter_TSM$Site


#Categorize site

filter_TSM <- filter_TSM[filter_TSM$Site!="Unknown"&filter_TSM$Site!="Popponesset Bay",] 
filter_TSM$Site[filter_TSM$Site=="Cockle Cove"] <- "Chatham"
filter_TSM$Site[filter_TSM$Site=="Cockle cove"] <- "Chatham"
#filter_TSM$Site[filter_TSM$Site=="Nobscussett"] <- "Dennis"
filter_TSM$Site[filter_TSM$Site=="Nobscusset"] <- "Nobscussett"
filter_TSM$Site[filter_TSM$Site=="Chatham all"] <- "Chatham"
filter_TSM$Site[filter_TSM$Site=="East Dennis"] <- "Dennis"
filter_TSM$Site[filter_TSM$Site=="Eden"] <- "Dennis"
filter_TSM$Site[filter_TSM$Site=="Provincetown collection site"] <- "Provincetown"
filter_TSM$Site[filter_TSM$Site=="Ptown"] <- "Provincetown"
filter_TSM$Site[filter_TSM$Site=="Sea street"] <- "Dennis"
filter_TSM$Site[filter_TSM$Site=="South st Dennis"] <- "Dennis"
filter_TSM$Site[filter_TSM$Site=="Barn"] <- "Barnstable"
filter_TSM$Site[filter_TSM$Site=="Barnstable Harbor"] <- "Barnstable"

filter_TSM <- filter_TSM[!is.na(filter_TSM$Site),]
filter_TSM <- filter_TSM[filter_TSM$Site!="Nobscussett",]

#Dataframe formatting
filter_TSM$Site <- as.factor(filter_TSM$Site)
filter_TSM$Site <- factor(filter_TSM$Site, levels=c('Provincetown', 'Dennis', "Nobscussett", 'Barnstable', "Chatham","Eel Pond"))
filter_TSM$Date <- as.Date(filter_TSM$Date, format = "%m/%d/%Y")
filter_TSM$Date.factor <- as.factor(filter_TSM$Date)
filter_TSM$AFDW.mg.L <- as.numeric(filter_TSM$AFDW.mg.L)
filter_TSM$TSM_mg.L <- as.numeric(filter_TSM$TSM_mg.L)

#QC step
filter_TSM <- filter_TSM[filter_TSM$POM..ug...L.>0,]
#filter_TSM <- filter_TSM[filter_TSM$Date>as.Date("1/1/21", format = "%m/%d/%Y"),]
filter_TSM$ChlPOMRatio <- filter_TSM$Chl.measured.ug.L/filter_TSM$AFDW.mg.L

str(filter_TSM)
filter_TSM$Site <- factor(filter_TSM$Site, levels=c('Barnstable', 'Dennis', 'Provincetown',"Chatham", "Eel Pond"))

levels(filter_TSM$Site) <- c('N. Cape: Barnstable Harbor', 'N. Cape: East Dennis', 'N. Cape: Provincetown Bay', "S. Cape: Cockle Cove, Chatham", "S. Cape: Eel Pond E Falmouth")

```

I'm skipping a quality control step for now of removing TSM's for filters that had aluminum oxide issues. This will probably increase perc org and decrease PIM.

Summarize data

```{r}
df_summary <- filter_TSM %>% 
  group_by(Site) %>% 
  summarise(
            POM = round(mean(AFDW.mg.L, na.rm = TRUE),1),
            
            POM_SE = round(sd(AFDW.mg.L, na.rm = TRUE) / 
                      sqrt(sum(!is.na(AFDW.mg.L))),1),
            
            TSM = round(mean(TSM_mg.L, na.rm = TRUE),1),
            
            TSM_SE = round(sd(TSM_mg.L, na.rm = TRUE) / 
                             sqrt(sum(!is.na(TSM_mg.L))),1),
            
            Perc_org = round(mean(X..organic, na.rm = TRUE)*100,0),
            
            Perc_SE = round(sd(X..organic*100, na.rm = TRUE) / 
                      sqrt(sum(!is.na(X..organic))),0),
            
            Chl = round(mean(ChlPOMRatio, na.rm = TRUE),1),

            Chl_SE = round(sd(ChlPOMRatio, na.rm = TRUE) / 
                      sqrt(sum(!is.na(ChlPOMRatio))),1)
            )


kable(df_summary)

df_summary <- filter_TSM %>% 
  group_by(Site,Date.factor) %>% 
  summarise(
            POM = round(mean(AFDW.mg.L, na.rm = TRUE),1),
            
            POM_SE = round(sd(AFDW.mg.L, na.rm = TRUE) / 
                      sqrt(sum(!is.na(AFDW.mg.L))),1),
            
            TSM = round(mean(TSM_mg.L, na.rm = TRUE),1),
            
            TSM_SE = round(sd(TSM_mg.L, na.rm = TRUE) / 
                             sqrt(sum(!is.na(TSM_mg.L))),1),
            
            Perc_org = round(mean(X..organic, na.rm = TRUE)*100,0),
            
            Perc_SE = round(sd(X..organic*100, na.rm = TRUE) / 
                      sqrt(sum(!is.na(X..organic))),0),
            
            Chl = round(mean(ChlPOMRatio, na.rm = TRUE),1),

            Chl_SE = round(sd(ChlPOMRatio, na.rm = TRUE) / 
                      sqrt(sum(!is.na(ChlPOMRatio))),1)
            )


kable(df_summary)
tail(df_summary)
```

```{r}
df_summary$Date.factor <- as.Date(df_summary$Date.factor) 
p<- ggplot(df_summary, aes(x=as.Date(Date.factor), y=POM, group=Site, color=Site)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=POM-POM_SE, ymax=POM+POM_SE), width=.2,
                position=position_dodge(0.05))
p+labs(x="Date", y = "POM (mg/L)")+
  theme_classic() +
  scale_color_manual(values = new.pal)

```

Monthly averages

```{r}
# df_month <- df_summary %>%
# group_by(Site,Month = lubridate::floor_date(Date.factor, "month")) %>%
# summarize(POM = mean(POM),
#           POM_SE = sqrt(sum(POM_SE^2)),
#           Chl = mean(Chl),
#           Chl_SE = sqrt(sum(Chl_SE^2)),
# 
#           )
#filter_TSM$Date.factor
df_month <- filter_TSM %>% 
  group_by(Site,Month = lubridate::floor_date(as.Date(Date.factor), "month")) %>% 
  summarise(
            POM = round(mean(AFDW.mg.L, na.rm = TRUE),1),
            
            POM_SE = round(sd(AFDW.mg.L, na.rm = TRUE) / 
                      sqrt(sum(!is.na(AFDW.mg.L))),1),
            
            Chl = round(mean(ChlPOMRatio, na.rm = TRUE),1),

            Chl_SE = round(sd(ChlPOMRatio, na.rm = TRUE) / 
                      sqrt(sum(!is.na(ChlPOMRatio))),1)
            )

df_month <- df_month[!is.na(df_month$Site),]

p<- ggplot(df_month, aes(x=as.Date(Month), y=POM, group=Site, color=Site)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=POM-POM_SE, ymax=POM+POM_SE), width=.2,
                position=position_dodge(0.05))
p+labs(x="Date", y = "POM (mg/L)")+
  theme_classic() +
  scale_color_manual(values = new.pal)


p<- ggplot(df_month, aes(x=as.Date(Month), y=Chl, group=Site, color=Site)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=Chl-Chl_SE, ymax=Chl+Chl_SE), width=.2,
                position=position_dodge(0.05))
p+labs(x="Date", y = "Total Chl (ug/L) to POM (mg / L) ratio")+
  theme_classic() +
  scale_color_manual(values = new.pal)

```

```{r}
df_transplant <- df_summary[df_summary$Site=="N. Cape: Provincetown Bay"|df_summary$Site=="S. Cape: Eel Pond E Falmouth",]
df_transplant <- df_transplant[!is.na(df_transplant$Site),]
df_transplant <- df_transplant[as.Date(df_transplant$Date.factor)>=as.Date("2022-01-01"),]

p<- ggplot(df_transplant, aes(x=as.Date(Date.factor), y=POM, group=Site, color=Site)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=POM-POM_SE, ymax=POM+POM_SE), width=.2,
                position=position_dodge(0.05))
#p+labs(x="Date", y = "POM (mg/L)")+
#  theme_classic() +
#  scale_color_manual(values = new.pal)
p
```

Use approx function to estimate daily TSM

```{r}

df_transplant.P <- df_summary[df_summary$Site=="N. Cape: Provincetown Bay",]
df_transplant.P <- df_transplant.P[!is.na(df_transplant.P$Site),]
df_transplant.P <- df_transplant.P[as.Date(df_transplant.P$Date.factor)>=as.Date("2022-01-01"),]

POM.approx.P <- approx(as.Date(df_transplant.P$Date.factor), df_transplant.P$POM, xout=seq(min(df_transplant.E$Date.factor), max(df_transplant.E$Date.factor), "days"))

plot(POM.approx.P)

df_transplant.E <- df_summary[df_summary$Site=="S. Cape: Eel Pond E Falmouth",]
df_transplant.E <- df_transplant.E[!is.na(df_transplant.E$Site),]
df_transplant.E <- df_transplant.E[as.Date(df_transplant.E$Date.factor)>=as.Date("2022-01-01"),]

POM.approx.E <- approx(as.Date(df_transplant.E$Date.factor), df_transplant.E$POM, xout=seq(min(df_transplant.E$Date.factor), max(df_transplant.E$Date.factor), "days"))

plot(POM.approx.E)
points(POM.approx.P)

write.csv(POM.approx.P, file="~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/TSM and Chl/Output_data/dailyPOMest.Prov.csv")
write.csv(POM.approx.E, file="~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/TSM and Chl/Output_data/dailyPOMest.Eel.csv")
```

Monthly summary

```{r}
df_transplant <- df_month[df_month$Site=="Provincetown"|df_month$Site=="Eel Pond",]
df_transplant <- df_transplant[as.Date(df_transplant$Month)>=as.Date("2022-01-01"),]

p<- ggplot(df_transplant, aes(x=as.Date(Month), y=POM, group=Site, color=Site)) + 
  geom_line() +
  geom_point()+
  geom_errorbar(aes(ymin=POM-POM_SE, ymax=POM+POM_SE), width=.2,
                position=position_dodge(0.05))
p+labs(x="Date", y = "Monthly POM (mg/L)")+
  theme_classic() +
  scale_color_manual(values = new.pal)
```
