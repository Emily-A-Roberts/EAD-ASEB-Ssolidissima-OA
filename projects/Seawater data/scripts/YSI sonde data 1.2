---
title: "YSI sonde data 1.2"

author: "Emily Roberts"

#format: html
format: 
  pdf:
    toc: TRUE
    number-sections: TRUE
    colorlinks: TRUE
editor: visual

params:
   Total_scale_corr: TRUE #Or false

date: 2023-12-23
date-format: short
abstract: "Trim individual files to time deployed and retrieved, then compile and visualize the data. Updated Eel Pond YSI data to include all data. "
---

```{r}
library(ggplot2)
library(data.table)
library(plotly)
library(tibbletime)
library(plyr)
library(dplyr)
library(zoo)
library(tidyr)
library(ggpubr)
#library(stat)
library(scales)
library(vegan)
library(pastecs)
#source('~/Documents/Software/R/MultivariateStats/functions/biostats.R')
library(tibble)
library(tidyverse)
library(PerformanceAnalytics)
library(lubridate)


theme_set(theme_minimal())
theme_update(panel.grid.minor.y = element_blank(), 
             panel.grid.major.y = element_line(colour = "grey91"),
             panel.grid.minor.x = element_line(colour = "grey81"), 
             panel.grid.major.x = element_line(colour = "grey61"),
             axis.line = element_blank())
```

## Eel Pond read in data

```{r}
dir_data <- "~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/YSI_Eel/776559/" #Updated 1/19/24

df.Eel <- data.table::fread(file = paste(dir_data,"WQBMHWQ.csv", sep=""),header = T, sep = ",",fill=TRUE, skip = 2, stringsAsFactors = FALSE)
df.Eel <- as.data.frame(df.Eel)
df.Eel$datetime <- as.POSIXct(strptime(df.Eel$DateTimeStamp, format = "%m/%d/%Y %H:%M"))

df.Eel.subset <- df.Eel[,c("datetime","Temp","Sal","DO_pct","DO_mgl","Depth","pH","Turb","ChlFluor")]

df.Eel <- df.Eel.subset
```

```{r}
h <- head(df.Eel,60)
t <- tail(df.Eel,60)

plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Eel$datetime,df.Eel$Depth)
plot(df.Eel$datetime,df.Eel$Sal, type = "b") # It looks like there are some bad datapoints in the salinity. I wonder if this indicates storms or cleaning the sensor? 

df.Eel <- df.Eel[df.Eel$Sal>25,]
df.Eel <- df.Eel[df.Eel$Depth>.5,]

plot(df.Eel$datetime,df.Eel$Depth)
plot(df.Eel$datetime,df.Eel$Sal, type = "b") # It looks like there are some bad datapoints in the salinity. I wonder if this indicates storms or cleaning the sensor? 

```

```{r}
df.Eel.hr <- df.Eel %>% 
  mutate(datetime = 
           lubridate::ceiling_date(datetime, 
                                   unit = "hour")) %>% 
  dplyr::group_by(datetime)%>% 
  dplyr::summarise_all(list(~mean(., na.rm = TRUE)))

plot(df.Eel$datetime,df.Eel$Temp)
plot(df.Eel.hr$datetime,df.Eel.hr$Temp)
```

## Ptown read in data

```{r}
dir_data <- "~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/YSI_Ptown/"
```

6/15/22 - 08/30/22

```{r}
df.Ptown <- data.table::fread(file = paste(dir_data,"Kor Measurement File Export - 012423 154508.csv", sep=""),header = T, sep = ",", skip = 8, stringsAsFactors = FALSE)
df.Ptown<- as.data.frame(df.Ptown)
names(df.Ptown) <- c("Date","Time","Sec","Site","ChlRFU","Cond_uS/cm","Depth","nlF_Cond","DO_pct","DO_%CB",
                     "DO_mgl","Pressure_psi","Sal","SpCond","TAL PE RFU","TDS_mg/L","Turb",
                     "TSS_mg/L","Wiper Position_V","pH","pH_mV","Temp","Vert_Pos","Battery_V","Cable Pwr")
df.Ptown$datetime <- paste(df.Ptown[,"Date"],df.Ptown[,"Time"], sep = " ")
df.Ptown$datetime <- as.POSIXct(strptime(df.Ptown$datetime, format = "%m/%d/%y %H:%M:%S"))

```

```{r}
h <- head(df.Ptown,60)
t <- tail(df.Ptown,60)

plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
df.Ptown <- df.Ptown[df.Ptown$Sal>5,]
df.Ptown <- df.Ptown[df.Ptown$Depth>.3,]
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)

dat_1 <- df.Ptown
```

```{r}
# 8/31/22 - 09/25/22

df.Ptown <- data.table::fread(file = paste(dir_data,"Kor Measurement File Export - 012423 154425.csv", sep=""),header = T, sep = ",", skip = 8, stringsAsFactors = FALSE)
df.Ptown<- as.data.frame(df.Ptown)
names(df.Ptown) <- c("Date","Time","Sec","Site","ChlRFU","Cond_uS/cm","Depth","nlF_Cond","DO_pct","DO_%CB",
                     "DO_mgl","Pressure_psi","Sal","SpCond","TAL PE RFU","TDS_mg/L","Turb",
                     "TSS_mg/L","Wiper Position_V","pH","pH_mV","Temp","Vert_Pos","Battery_V","Cable Pwr")

df.Ptown$datetime <- paste(df.Ptown[,"Date"],df.Ptown[,"Time"], sep = " ")
df.Ptown$datetime <- as.POSIXct(strptime(df.Ptown$datetime, format = "%m/%d/%y %H:%M:%S"))

```

```{r}
h <- head(df.Ptown,60)
t <- tail(df.Ptown,60)
plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
# df.Ptown <- df.Ptown[df.Ptown$Sal>5,] Not needed
# df.Ptown <- df.Ptown[df.Ptown$Depth>.3,] Not needed
dat_2 <- df.Ptown
```

```{r}
# 10/11/22 - 11/7/22
df.Ptown <- data.table::fread(file = paste(dir_data,"Kor Measurement File Export - 012423 154319.csv",sep=""),header = T, sep = ",", skip = 8, stringsAsFactors = FALSE)
df.Ptown<- as.data.frame(df.Ptown)
names(df.Ptown) <- c("Date","Time","Sec","Site","ChlRFU","Cond_uS/cm","Depth","nlF_Cond","DO_pct","DO_%CB",
                     "DO_mgl","Pressure_psi","Sal","SpCond","TAL PE RFU","TDS_mg/L","Turb",
                     "TSS_mg/L","Wiper Position_V","pH","pH_mV","Temp","Vert_Pos","Battery_V","Cable Pwr")
df.Ptown$datetime <- paste(df.Ptown[,"Date"],df.Ptown[,"Time"], sep = " ")
df.Ptown$datetime <- as.POSIXct(strptime(df.Ptown$datetime, format = "%m/%d/%y %H:%M:%S"))

```

```{r}
h <- head(df.Ptown,60)
t <- tail(df.Ptown,60)
plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
# df.Ptown <- df.Ptown[df.Ptown$Sal>5,] Not needed
df.Ptown <- df.Ptown[df.Ptown$Depth>.3,] 
dat_3 <- df.Ptown
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
```

```{r}
# 11/7/22 - 1/21/22
df.Ptown <- data.table::fread(file = paste(dir_data,"Kor Measurement File Export - 012423 154229.csv",sep=""),header = T, sep = ",", skip = 8, stringsAsFactors = FALSE)
df.Ptown<- as.data.frame(df.Ptown)
names(df.Ptown) <- c("Date","Time","Sec","Site","ChlRFU","Cond_uS/cm","Depth","nlF_Cond","DO_pct","DO_%CB",
                     "DO_mgl","Pressure_psi","Sal","SpCond","TAL PE RFU","TDS_mg/L","Turb",
                     "TSS_mg/L","Wiper Position_V","pH","pH_mV","Temp","Vert_Pos","Battery_V","Cable Pwr")
df.Ptown$datetime <- paste(df.Ptown[,"Date"],df.Ptown[,"Time"], sep = " ")
df.Ptown$datetime <- as.POSIXct(strptime(df.Ptown$datetime, format = "%m/%d/%y %H:%M:%S"))

```

```{r}
h <- head(df.Ptown,60)
t <- tail(df.Ptown,60)
plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
# df.Ptown <- df.Ptown[df.Ptown$Sal>5,] Not needed
df.Ptown <- df.Ptown[df.Ptown$Depth>.3,] 
dat_4 <- df.Ptown
```

I need the data from 1/21/23 to \~6/15/23

```{r}
# 11/7/22 - 1/21/22
df.Ptown <- data.table::fread(file = paste(dir_data,"Kor Measurement File Export - 122323 131516.csv",sep=""),header = T, sep = ",", skip = 8, stringsAsFactors = FALSE)
df.Ptown<- as.data.frame(df.Ptown)
names(df.Ptown) <- c("Date","Time","Sec","Site","ChlRFU","Cond_uS/cm","Depth","nlF_Cond","DO_pct","DO_%CB",
                     "DO_mgl","Pressure_psi","Sal","SpCond","TAL PE RFU","TDS_mg/L","Turb",
                     "TSS_mg/L","Wiper Position_V","pH","pH_mV","Temp","Vert_Pos","Battery_V","Cable Pwr")
df.Ptown$datetime <- paste(df.Ptown[,"Date"],df.Ptown[,"Time"], sep = " ")
df.Ptown$datetime <- as.POSIXct(strptime(df.Ptown$datetime, format = "%m/%d/%Y %H:%M:%S"))

df.Ptown <- df.Ptown %>% 
  mutate_if(is.character,as.numeric)
str(df.Ptown)

```

```{r}
h <- head(df.Ptown,60)
t <- tail(df.Ptown,60)
plot(h$datetime,h$Sal)
plot(t$datetime,t$Sal)
plot(h$datetime,h$Depth)
plot(t$datetime,t$Depth)
plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)
# df.Ptown <- df.Ptown[df.Ptown$Sal>5,] Not needed
df.Ptown <- df.Ptown[df.Ptown$Depth>.5,] 
#Note there were a few calibrations in this dataset
# 4/10/23 between 11AM and 1PM
# 5/10/23 between 11AM and 1PM
df.Ptown.plot <- df.Ptown[df.Ptown$datetime<"2023-04-11 00:00:00" & df.Ptown$datetime>"2023-04-10 00:00:00",]
plot(df.Ptown.plot$datetime,df.Ptown.plot$Depth) #No bad data recorded during time when sensor was calibrated

df.Ptown.plot <- df.Ptown[df.Ptown$datetime<"2023-05-10 16:00:00" & df.Ptown$datetime>"2023-05-10 08:00:00",]
plot(df.Ptown.plot$datetime,df.Ptown.plot$Depth) 

df.Ptown <- 
  df.Ptown[df.Ptown$datetime!="2023-05-10 11:00:00",]#Just one data point at 10AM is bad bc sensor is (partially) out of the water. 

plot(df.Ptown$datetime,df.Ptown$Depth)
plot(df.Ptown$datetime,df.Ptown$Sal)

df.Ptown
dat_5 <- df.Ptown
```

```{r}
# Combine the different series of datasets
df.Ptown <- rbind(dat_1, dat_2, dat_3, dat_4, dat_5)
str(df.Ptown)
df.Ptown <- df.Ptown[,c("datetime","ChlRFU","Depth","DO_pct","DO_mgl","Sal","Turb","pH","Temp","Vert_Pos","Battery_V")]

plot(df.Ptown$datetime,df.Ptown$Temp)

```

## Merge the two datasets

```{r}
df.all <- merge(x = as.data.frame(df.Ptown),y = as.data.frame(df.Eel.hr), by.x = "datetime", by.y = "datetime", suffixes = c("_P","_E"), all = TRUE)
```

```{r}
# Temp plots
data_long <- gather(df.all, condition, measurement, c("Temp_P","Temp_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("Hourly SONDE Temperature (",degree,"C)")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))
```

```{r}
# Sal plots
data_long <- gather(df.all, condition, measurement, c("Sal_P","Sal_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("SONDE Salinity (psu)")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))

```

```{r}
# Oxygen plots

# Removing DO at 150 % sat. This does not make logical sense and these values are present in July to October in Provincetown in 2022. 
df.all$DO_pct_P[df.all$datetime>"2022-06-01"&df.all$datetime<"2022-08-30"]<- NA


data_long <- gather(df.all, condition, measurement, c("DO_pct_P","DO_pct_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("SONDE Oxygen % sat")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))
  #xlim(as.POSIXct(c("5/15/22","11/01/22"), format = "%m/%d/%y"))
```

```{r}
# pH plots

# Removing pH below 7.5. This does not make logical sense and these values are present in February and March. 
#df.all$pH_E[df.all$pH_E<7.5]<- NA
df.all$pH_E[df.all$datetime>"2023-02-21"&df.all$datetime<"2023-03-23"]<- NA

data_long <- gather(df.all, condition, measurement, c("pH_P","pH_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("SONDE pH")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))

```

```{r}
# Chl plots
data_long <- gather(df.all, condition, measurement, c("ChlRFU","ChlFluor"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("SONDE Fluorescence RFU ")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))
```

```{r}
# Turbidity plots
data_long <- gather(df.all, condition, measurement, c("Turb_P","Turb_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
  ylab(expression(paste("SONDE Turbidity")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))
```

```{r}
df.all$TempC_Ptown <- df.all$Temp_P
df.all$TempC_Eel <- df.all$Temp_E

data_long <- gather(df.all, condition, measurement, c("TempC_Ptown","TempC_Eel"), factor_key = TRUE)

head(data_long)
max.m <- max(data_long$measurement, na.rm = TRUE)
min.m <- min(data_long$measurement, na.rm = TRUE)

max.m_upper_top <- max.m + 0.07*(max.m-min.m)
max.m_upper <- max.m + 0.04*(max.m-min.m)
max.m_lower <- max.m + 0.01*(max.m-min.m)
data_long$presence[data_long$measurement>0 & data_long$condition=="TempC_Eel"] <- max.m_upper
data_long$presence[data_long$measurement>0 & data_long$condition=="TempC_Ptown"] <- max.m_lower

df.2 <- data.frame(
  condition = data_long$condition,
  date = data_long$datetime,
  measurement = data_long$presence
)
df.3 <- data.frame(
  date = as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"),
  measurement = max.m_upper_top*c(1,1)
)
```

```{r}
write_dir<- "~/GitHub/EAD-ASEB-Ssolidissima-OA/projects/Seawater data/data/"
write.csv(df.all,file = paste(write_dir,"YSI_Eel_Ptown.csv",sep=""))
```

```{r}
temp_graph <- ggplot(data_long, aes(x = datetime, y = measurement))+ 
  geom_point(aes(color = condition), alpha = 0.05, size = 0.5, show.legend = FALSE) +
  #geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#00757d","#E7B800")) +
  ylab(expression(paste("Temperature (",degree,"C)")))+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))
temp_graph
```

```{r}
# Temp monthly means ====

str(df.all)


all_daily <- df.all %>% 
  mutate(year = year(datetime), month = month(datetime), day = day(datetime)) %>%
  group_by(date = as.Date(paste(year, month,day,01, sep="-"))) %>%
  summarise_all(list(~mean(., na.rm = TRUE)))

data_long <- gather(df.all, condition, measurement, c("Temp_P","Temp_E"), factor_key = TRUE)
#data_long <- gather(all_daily, condition, measurement, c("Temp_P","Temp_E"), factor_key = TRUE)
ggplot(data_long, aes(x = datetime, y = measurement)) + 
  #geom_point(aes(color = condition), alpha = 0.2) +
  geom_line(aes(color = condition), size = .5) +
  scale_color_manual(values = c("#E7B800","#00757d")) +
  theme_minimal()+
 ylab(expression(paste("Hourly SONDE Temperature (",degree,"C)")))+
  xlab("Date")+
  xlim(as.POSIXct(c("5/15/22","6/15/23"), format = "%m/%d/%y"))

all_monthly <- df.all %>% 
  mutate(year = year(datetime), month = month(datetime)) %>%
  group_by(date = as.Date(paste(year, month,01, sep="-"))) %>%
  summarise_all(list(~mean(., na.rm = TRUE),~max(., na.rm = TRUE),~min(., na.rm = TRUE)))

data_long <- gather(all_monthly, condition, measurement, 
                    c("TempC_Ptown_mean","TempC_Ptown_max","TempC_Ptown_min",
                      "TempC_Eel_mean","TempC_Eel_max","TempC_Eel_min"), factor_key = TRUE)

ggplot(data_long, aes(x = date, y = measurement)) + 
  geom_point(aes(color = condition), size = 0.5, alpha = 0.2) +
  geom_line(aes(color = condition, linetype = condition),  size = .5) +
  scale_color_manual(values = c("#00757d","#00757d","#00757d", "#E7B800", "#E7B800", "#E7B800")) +
  scale_linetype_manual(values = c("solid","dotted","dotted","solid","dotted","dotted"))+
  theme_minimal()

```

```{r}


```
